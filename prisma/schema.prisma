generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  email         String   @unique(map: "email") @db.VarChar(255)
  name          String   @db.VarChar(100)
  gender        String   @db.VarChar(15)
  birth         DateTime @db.Date
  address       String   @db.VarChar(255)
  detailAddress String?  @map("detail_address") @db.VarChar(255)
  phoneNumber   String   @map("phone_number") @db.VarChar(15)

  userMissions  UserMission[]
  userFavorCategories UserFavorCategory[]
  reviews              Review[]
  @@map("user")
}

model FoodCategory {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(100)

  userFavorCategories UserFavorCategory[]

  @@map("food_category")
}

model UserFavorCategory {
  id             Int          @id @default(autoincrement())
  user           User         @relation(fields: [userId], references: [id])
  userId         Int          @map("user_id")
  foodCategory   FoodCategory @relation(fields: [foodCategoryId], references: [id])
  foodCategoryId Int          @map("food_category_id")

  @@index([foodCategoryId], map: "f_category_id")
  @@index([userId], map: "user_id")
  @@map("user_favor_category")
}

model Store {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(100)
  address     String   @db.VarChar(255)
  description String?  @db.Text

  reviews     Review[]
  missions  Mission[]
  @@map("store")
}

model Review {
  id        Int      @id @default(autoincrement())
  content   String   @db.Text
  rating    Int
  userId    Int      @map("user_id")
  storeId   Int      @map("store_id")
  createdAt DateTime @default(now()) @map("created_at")

  user   User   @relation(fields: [userId], references: [id])
  store  Store  @relation(fields: [storeId], references: [id])
  images ReviewImage[]

  @@map("review")
}

model ReviewImage {
  id        Int    @id @default(autoincrement())
  imageUrl  String @db.VarChar(255) @map("image_url")
  reviewId  Int    @map("review_id")

  review Review @relation(fields: [reviewId], references: [id])

  @@map("review_image")
}

model Mission {
  id           Int           @id @default(autoincrement())
  storeId      Int
  reward       Int
  deadline     DateTime
  missionSpec  String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  store        Store         @relation(fields: [storeId], references: [id])
  userMissions UserMission[]
}

model UserMission {
  id         Int       @id @default(autoincrement())
  userId     Int
  missionId  Int
  status     String    @db.VarChar(15)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  user       User      @relation(fields: [userId], references: [id])
  mission    Mission   @relation(fields: [missionId], references: [id])
}
