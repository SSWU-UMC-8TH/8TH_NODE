generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// user 테이블
model User {
  id            Int      @id @default(autoincrement())
  email         String   @unique(map: "email") @db.VarChar(255)
  name          String   @db.VarChar(100)
  gender        String   @db.VarChar(15)
  birth         DateTime @db.Date
  address       String   @db.VarChar(255)
  detailAddress String?  @map("detail_address") @db.VarChar(255)
  phoneNumber   String   @map("phone_number") @db.VarChar(15)

  userFavorCategories UserFavorCategory[]
  reviews Review[]
  userMissions UserMission[]

  @@map("user")
}

// food_category 테이블 
model FoodCategory {
    id Int @id @default(autoincrement())
    name String @db.VarChar(100)

    userFavorCategories UserFavorCategory[]

    @@map("food_category")
}

//user_favor_category 테이블 
model UserFavorCategory {
    id Int @id @default(autoincrement())
    user User @relation(fields: [userId], references:[id])
    userId Int @map("user_id")

    foodCategory FoodCategory @relation(fields:[foodCategoryId], references:[id])
    foodCategoryId Int @map("food_category_id")

    @@index([foodCategoryId], map:"f_category_id") 
    @@index([userId], map:"user_id")

    @@map("user_favor_category")
}

// store 테이블 
model Store {
  id Int @id @default(autoincrement())
  name String @db.VarChar(100)
  address String @db.VarChar(255)
  regionId Int @map("region_id")

  region Region @relation(fields: [regionId], references:[id])

  reviews Review[]
  missions Mission[]

  @@map("store")
}

// region 테이블 
model Region {
  id Int @id @default(autoincrement())
  name String @db.VarChar(20)

  stores Store[] // 1:N 관계 (store가 N)

  @@map("region")
}

// review 테이블
model Review {
  id Int @id @default(autoincrement())
  userId Int @map("user_id")
  storeId Int @map("store_id")
  body String @db.Text
  score Int

  user User @relation(fields:[userId], references:[id])
  store Store @relation(fields:[storeId], references:[id])

  @@map("review")
}

// mission 테이블 
model Mission {
  id Int @id @default(autoincrement())
  storeId Int @map("store_id")
  reward Int
  deadline DateTime
  missionSpec String @map("mission_spec") @db.Text
  
  store Store @relation(fields:[storeId], references:[id])

  userMissions UserMission[]

  @@map("mission")
}

// user_mission 테이블 
model UserMission {
  id Int @id @default(autoincrement())
  userId Int @map("user_id")
  missionId Int @map("mission_id")
  status String @default("IN_PROGRESS") @db.VarChar(15)

  user User @relation(fields:[userId], references:[id])
  mission Mission @relation(fields:[missionId], references:[id])

  @@unique([userId, missionId]) // 한 유저가 동일 미션에 여러 번 도전 못 하게 
  @@map("user_mission")
}

// Session 테이블 
model Session {
  id        String   @id
  sid       String   @unique
  data      String   @db.VarChar(512)
  expiresAt DateTime @map("expires_at")

  @@map("session")
}